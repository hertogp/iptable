#!/bin/bash
# :vim:ft=SH:

usage() {
    echo "Usage:"
    echo
    echo "  mu_header <file>[.c]"
    echo
    echo "   creates <file>_mu.h"
    echo
    echo "   mu_header is a shell script to create the <file>_mu.h header file"
    echo "   to be included in <file>.c, which is assumed to be a unit test"
    echo "   file, based on minunit.h"
    echo
    echo "   Meaning <file.c> should contain only unit test functions like:"
    echo
    echo "   void"
    echo "   test_xyz(void)"
    echo "   {"
    echo "       // setup as needed"
    echo "       mu_equal(1+1, 2, "1+1 really should equal %s", 2);"
    echo "       mu_assert(1+1 == 2);"
    echo "       mu_true(1+1 == 2);"
    echo "       mu_false(1+1 == 3);"
    echo "       // teardown as needed"
    echo "   }"
}

# -- MAIN

# -- pick up source file for which mu_<src>.h is to be created
if [ $# -eq 1 ]; then
        SRC=$1;
else
    usage
    exit 1;
fi

# ensure it ends with .c
if [ ${SRC:(-2)} != ".c" ]; then
    SRC="${SRC}.c";
fi

TGT="${SRC:0:-2}_mu.h"

if [ ! -s ${SRC} ]; then
    echo "${SRC} not found or empty file!"
fi

# - pickup the test_<functions> from the source file

FUNCS=$(sed -ne '/^\(void\s\+\)\?\(test_\S\+\)/!d; s/^void\s\+//; s/(\s*void\s*)//; p' ${SRC});
# for match in ${FUNCS[*]}
# do
#     echo "-> $match"
# done
# exit 1

cat <<- EOF > ${TGT}
// AUTOGENERATED ${TGT} -> to '#include' in ${SRC}

// test functions

EOF

for func in ${FUNCS[*]}; do
    echo "void $func(void);" >> ${TGT}
done

cat <<- EOF >> ${TGT}

// test runner

void
mu_run_tests(void)
{
EOF

for func in ${FUNCS[*]}; do
    echo "    mu_verify(${func});" >> ${TGT}
done
echo "}" >> ${TGT}

